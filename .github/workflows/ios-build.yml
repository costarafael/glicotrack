name: iOS Build - Generate App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    name: Build iOS App
    runs-on: macos-14

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install --legacy-peer-deps

    - name: Select Xcode Version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'

    - name: Environment Info
      run: |
        echo "=== Environment ==="
        xcodebuild -version
        echo "Node: $(node --version)"
        echo "Ruby: $(ruby --version)"
        echo "CocoaPods: $(pod --version)"

    - name: Clear CocoaPods Cache
      run: |
        echo "=== Clearing CocoaPods Cache ==="
        cd ios
        rm -rf Pods Podfile.lock build
        pod cache clean --all || true

    - name: Install CocoaPods Dependencies
      run: |
        cd ios
        echo "=== Installing CocoaPods Dependencies ==="
        pod install --verbose
        
        echo "=== Checking LevelDB Installation ==="
        if [ -d "Pods/leveldb-library" ]; then
          echo "✅ LevelDB found, checking patch status:"
          if grep -q "port/port.h" Pods/leveldb-library/db/version_set.h; then
            echo "✅ version_set.h already patched"
          else
            echo "❌ version_set.h NOT patched"
          fi
          if grep -q "port/port.h" Pods/leveldb-library/db/version_set.cc; then
            echo "✅ version_set.cc already patched"
          else
            echo "❌ version_set.cc NOT patched"
          fi
        else
          echo "❌ LevelDB not found in Pods"
        fi
      env:
        RCT_NEW_ARCH_ENABLED: 1
        USE_HERMES: 1

    - name: Build iOS App for Simulator
      run: |
        cd ios
        echo "=== Building iOS App ==="
        xcodebuild \
          -workspace GlicoTrack.xcworkspace \
          -scheme GlicoTrack \
          -configuration Debug \
          -sdk iphonesimulator \
          -derivedDataPath build \
          CODE_SIGNING_ALLOWED=NO \
          clean build

    - name: Upload iOS App Artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: GlicoTrack-iOS-Simulator
        path: ios/build/Build/Products/Debug-iphonesimulator/TempGlicoTrack.app
        retention-days: 7

    - name: Build Summary
      if: always()
      run: |
        echo "## 📱 iOS Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type:** Debug (Simulator)" >> $GITHUB_STEP_SUMMARY
        if [ "${{ job.status }}" == "success" ]; then
          echo "- **Download:** Check Artifacts section for .app file" >> $GITHUB_STEP_SUMMARY
        fi