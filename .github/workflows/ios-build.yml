name: iOS Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Permite executar manualmente

jobs:
  build-ios:
    name: Build iOS App (Clean Template)
    runs-on: macos-14 # macOS Sonoma com Xcode 16.2
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: |
        echo "=== Installing Node.js dependencies ==="
        rm -rf node_modules package-lock.json
        npm install --legacy-peer-deps
        
    - name: Select Xcode Version
      run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
      
    - name: Show Xcode and Environment Info
      run: |
        echo "=== Build Environment ==="
        xcodebuild -version
        echo "Node.js: $(node --version)"
        echo "npm: $(npm --version)"
        
    - name: Install CocoaPods Dependencies
      run: |
        cd ios
        echo "=== Installing CocoaPods dependencies ==="
        
        # Complete cleanup first
        rm -rf Pods Podfile.lock build
        rm -rf ~/Library/Developer/Xcode/DerivedData/GlicoTrack-* || true
        
        echo "CocoaPods version: $(pod --version)"
        echo "Ruby version: $(ruby --version)"
        
        # Set environment variables for React Native flags
        export RCT_NEW_ARCH_ENABLED=1
        export USE_HERMES=1
        
        echo "Environment flags:"
        echo "RCT_NEW_ARCH_ENABLED=$RCT_NEW_ARCH_ENABLED"
        echo "USE_HERMES=$USE_HERMES"
        
        # Simple installation
        pod install --repo-update
        
        echo "=== Installation verification ==="
        ls -la . | grep -E "(\.xcworkspace|Podfile\.lock)"
        echo "Workspace created: $(ls -la *.xcworkspace 2>/dev/null || echo 'NOT FOUND')"
      env:
        RCT_NEW_ARCH_ENABLED: 1
        USE_HERMES: 1
        
    - name: Build iOS App (Debug)
      run: |
        cd ios
        echo "=== Building iOS App for Simulator ==="
        
        xcodebuild \
          -workspace GlicoTrack.xcworkspace \
          -scheme GlicoTrack \
          -configuration Debug \
          -sdk iphonesimulator \
          -derivedDataPath build \
          -allowProvisioningUpdates \
          CODE_SIGNING_ALLOWED=NO \
          ONLY_ACTIVE_ARCH=NO \
          clean build
          
    - name: Build iOS App for Device (Release - Optional)
      if: github.ref == 'refs/heads/main'
      run: |
        cd ios
        xcodebuild \
          -workspace GlicoTrack.xcworkspace \
          -scheme GlicoTrack \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -derivedDataPath build \
          -allowProvisioningUpdates \
          DEVELOPMENT_TEAM="${{ secrets.APPLE_TEAM_ID }}" \
          CODE_SIGN_IDENTITY="iPhone Developer" \
          PROVISIONING_PROFILE_SPECIFIER="" \
          clean archive \
          -archivePath build/GlicoTrack.xcarchive
          
    - name: Export IPA (Release - Optional)
      if: github.ref == 'refs/heads/main'
      run: |
        cd ios
        # Criar ExportOptions.plist para desenvolvimento
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>method</key>
          <string>development</string>
          <key>teamID</key>
          <string>${{ secrets.APPLE_TEAM_ID }}</string>
          <key>signingStyle</key>
          <string>automatic</string>
          <key>stripSwiftSymbols</key>
          <true/>
          <key>uploadSymbols</key>
          <true/>
        </dict>
        </plist>
        EOF
        
        xcodebuild \
          -exportArchive \
          -archivePath build/GlicoTrack.xcarchive \
          -exportPath build \
          -exportOptionsPlist ExportOptions.plist \
          -allowProvisioningUpdates
          
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/build/Build/Products/Debug-iphonesimulator/TempGlicoTrack.app
          ios/build/GlicoTrack.ipa
        retention-days: 7
        
    - name: Upload Build Logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs
        path: |
          ios/build/Logs
          ~/Library/Developer/Xcode/DerivedData/**/Logs
        retention-days: 3
        
    - name: Build Summary
      if: always()
      run: |
        echo "## 📱 iOS Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Xcode Version:** $(xcodebuild -version | head -n 1)" >> $GITHUB_STEP_SUMMARY
        echo "- **React Native:** 0.80.2" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Configuration:** Debug (Simulator)" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "- **Release Build:** ✅ Attempted" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Release Build:** ⏭️ Skipped (not main branch)" >> $GITHUB_STEP_SUMMARY
        fi