# Test Podfile WITHOUT Firebase (leveldb isolation)
require_relative '../node_modules/react-native/scripts/react_native_pods'

platform :ios, '16.0'
prepare_react_native_project!

# Temporarily disabled Firebase to isolate leveldb build issues
# use_frameworks! :linkage => :static
# $RNFirebaseAsStaticFramework = true

target 'TempGlicoTrack' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    
    # Fix both Firebase/LevelDB and MMKV MRC issues
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Ensure consistent deployment target for all pods (Hermes compatible)
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        
        # Disable bitcode (deprecated in Xcode 14+)
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        
        # Basic React Native New Architecture support
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= []
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_NEW_ARCH_ENABLED=1'
      end
      
      # Fix react-native-mmkv compilation issues (MRC + C++/ObjC conversion)
      if target.name == 'MMKV'
        target.build_configurations.each do |config|
          # Enable Objective-C exceptions for better C++/ObjC interop
          config.build_settings['GCC_ENABLE_OBJC_EXCEPTIONS'] = 'YES'
          
          # Enable C++ standard library for better std::string support
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
          config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
          
          # Add header search paths for better includes
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          config.build_settings['HEADER_SEARCH_PATHS'] << '$(inherited)'
        end
        
        target.source_build_phase.files.each do |file|
          if file.file_ref.path.end_with?('.cpp') || file.file_ref.path.end_with?('.mm')
            file_path = file.file_ref.path
            
            # Files that need MRC (Manual Reference Counting) 
            if file_path.include?('MiniPBCoder') || file_path.include?('PBEncodeItem') ||
               file_path.include?('CodedInputData') || file_path.include?('CodedOutputData')
              
              puts "ðŸ”§ Setting -fno-objc-arc for MMKV MRC file: #{file_path}"
              file.settings = { 'COMPILER_FLAGS' => '-fno-objc-arc' }
              
            # Files that need better C++/ObjC interop
            elsif file_path.include?('MmkvHostObject') || file_path.include?('MMKV')
              puts "ðŸ”§ Setting C++/ObjC compatibility flags for: #{file_path}"
              file.settings = { 
                'COMPILER_FLAGS' => '-std=c++17 -Wno-conversion -Wno-nullability-completeness'
              }
            end
          end
        end
      end
    end
    
    # LevelDB patches removed - testing build without Firebase
  end
end
